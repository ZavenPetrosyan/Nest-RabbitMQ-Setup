version: '3.8'
services:
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_DATABASE: mydatabase
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.runCommand({ping: 1})' | mongosh localhost:27017/mydatabase --quiet"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  redis:
    image: redislabs/redistimeseries:latest
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  service-a:
    build:
      context: ./service-a
    ports:
      - "3000:3000"
      - "9229:9229"
    volumes:
      - ./service-a:/app
      - /app/node_modules
    env_file:
      - ./service-a/.env
    environment:
      - NODE_ENV=dev
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: npm run start:debug

  service-b:
    build:
      context: ./service-b
    ports:
      - "3001:3001"
    volumes:
      - ./service-b:/app
      - /app/node_modules
    env_file:
      - ./service-b/.env
    environment:
      - NODE_ENV=dev
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: npm run start:debug

volumes:
  mongo_data:
